import discord
from discord import app_commands
from discord.ext import commands, tasks
import os
from datetime import datetime, timedelta

intents = discord.Intents.default()
intents.members = True
intents.guilds = True
intents.message_content = True
intents.voice_states = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –°–ª–æ–≤–Ω–∏–∫–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
voice_time_tracker = {}
tracked_channels = {}  # –ó–±–µ—Ä—ñ–≥–∞—î {guild_id: {"channel_id": channel_id, "log_channel": log_channel_id}}
warning_sent = set()  # –î–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤–∂–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏—Ö –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–æ Discord!')
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∫–æ–º–∞–Ω–¥: {e}")
    check_voice_activity.start()

@tasks.loop(minutes=1)
async def check_voice_activity():
    current_time = datetime.utcnow()
    for guild_id, data in tracked_channels.items():
        guild = bot.get_guild(guild_id)
        if not guild:
            continue
            
        channel = guild.get_channel(data["channel_id"])
        log_channel = guild.get_channel(data["log_channel"])
        
        if not channel or not log_channel:
            continue
            
        for member in channel.members:
            if member.bot:
                continue
                
            member_key = f"{guild_id}_{member.id}"
            
            if member_key not in voice_time_tracker:
                voice_time_tracker[member_key] = current_time
                warning_sent.discard(member_key)
                continue
                
            time_in_channel = current_time - voice_time_tracker[member_key]
            
            # –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è 10 —Ö–≤–∏–ª–∏–Ω
            if time_in_channel > timedelta(minutes=10) and member_key not in warning_sent:
                try:
                    await member.send(
                        "‚ö†Ô∏è –í–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å —É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ –±—ñ–ª—å—à–µ 10 —Ö–≤–∏–ª–∏–Ω. "
                        "–ë—É–¥—å –ª–∞—Å–∫–∞, –±—É–¥—å—Ç–µ –∞–∫—Ç–∏–≤–Ω—ñ –∞–±–æ –≤–∏–π–¥—ñ—Ç—å –∑ –∫–∞–Ω–∞–ª—É, —ñ–Ω–∞–∫—à–µ –≤–∏ –±—É–¥–µ—Ç–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω—ñ."
                    )
                    warning_sent.add(member_key)
                except Exception as e:
                    print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è {member}: {e}")
            
            # –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø—ñ—Å–ª—è 15 —Ö–≤–∏–ª–∏–Ω (10+5 –Ω–∞ —Ä–µ–∞–∫—Ü—ñ—é)
            if time_in_channel > timedelta(minutes=15):
                try:
                    await member.move_to(None, reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
                    await log_channel.send(
                        f"üî¥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention} –±—É–ª–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–æ –∑ –∫–∞–Ω–∞–ª—É {channel.mention} "
                        f"—á–µ—Ä–µ–∑ –Ω–∞–¥—Ç–æ —Ç—Ä–∏–≤–∞–ª–µ –ø–µ—Ä–µ–±—É–≤–∞–Ω–Ω—è ({time_in_channel.seconds//60} —Ö–≤)."
                    )
                    del voice_time_tracker[member_key]
                    warning_sent.discard(member_key)
                except Exception as e:
                    print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–∫–ª—é—á–∏—Ç–∏ {member}: {e}")

@bot.event
async def on_voice_state_update(member, before, after):
    if before.channel and before.channel.id in [data["channel_id"] for data in tracked_channels.values()]:
        member_key = f"{member.guild.id}_{member.id}"
        if member_key in voice_time_tracker:
            del voice_time_tracker[member_key]
            warning_sent.discard(member_key)

@bot.tree.command(name="track_voice", description="–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É")
@app_commands.describe(
    voice_channel="–ì–æ–ª–æ—Å–æ–≤–∏–π –∫–∞–Ω–∞–ª –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è",
    log_channel="–ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–∫–ª—é—á–µ–Ω—å"
)
async def track_voice(interaction: discord.Interaction, 
                     voice_channel: discord.VoiceChannel, 
                     log_channel: discord.TextChannel):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.", ephemeral=True)
        return
    
    tracked_channels[interaction.guild_id] = {
        "channel_id": voice_channel.id,
        "log_channel": log_channel.id
    }
    
    await interaction.response.send_message(
        f"üîä –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞–Ω–Ω—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É {voice_channel.mention} –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ.\n"
        f"üìù –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –±—É–¥–µ –≤ –∫–∞–Ω–∞–ª—ñ {log_channel.mention}.\n"
        "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –æ—Ç—Ä–∏–º–∞—é—Ç—å –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 10 —Ö–≤–∏–ª–∏–Ω —Ç–∞ –±—É–¥—É—Ç—å –≤—ñ–¥–∫–ª—é—á–µ–Ω—ñ —á–µ—Ä–µ–∑ 15 —Ö–≤–∏–ª–∏–Ω –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.",
        ephemeral=True
    )

# ... (—ñ–Ω—à—ñ –≤–∞—à—ñ –∫–æ–º–∞–Ω–¥–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω) ...

TOKEN = os.getenv('DISCORD_TOKEN')
if not TOKEN:
    raise ValueError("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ DISCORD_TOKEN")

bot.run(TOKEN)
