import discord
from discord import app_commands, ui
from discord.ext import commands, tasks
import os
from datetime import datetime, timedelta
import asyncio
from collections import defaultdict
import json
import random
import aiohttp
from typing import Optional, Literal
import pytz

intents = discord.Intents.default()
intents.members = True
intents.guilds = True
intents.message_content = True
intents.voice_states = True
intents.invites = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –°–∏—Å—Ç–µ–º–∏ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
voice_time_tracker = {}
tracked_channels = {}
warning_sent = set()
voice_activity = defaultdict(timedelta)
last_activity_update = datetime.utcnow()

# –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π –∑–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è–º–∏
invite_roles = {}
invite_cache = {}

# –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
welcome_messages = {}

# –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è
request_channels = {}
pending_approvals = {}

class ApprovalView(ui.View):
    def __init__(self, member: discord.Member, request_data: dict):
        super().__init__(timeout=None)
        self.member = member
        self.request_data = request_data
    
    @ui.button(label="‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏", style=discord.ButtonStyle.green, custom_id="approve_member")
    async def approve_button(self, interaction: discord.Interaction, button: ui.Button):
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚ùå –¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å —Å—Ö–≤–∞–ª—é–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏.", ephemeral=True)
            return
        
        guild = interaction.guild
        role_id = self.request_data.get("default_role_id")
        
        if role_id:
            role = guild.get_role(role_id)
            if role:
                try:
                    await self.member.add_roles(role)
                except:
                    pass
        
        # –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–ª—å–Ω–∏—Ö
        if str(guild.id) in pending_approvals and self.member.id in pending_approvals[str(guild.id)]:
            pending_approvals[str(guild.id)].remove(self.member.id)
        
        await interaction.response.send_message(f"‚úÖ {self.member.mention} –±—É–ª–æ —Å—Ö–≤–∞–ª–µ–Ω–æ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞!", ephemeral=False)
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        try:
            await self.member.send("üéâ –í–∞—à –∑–∞–ø–∏—Ç –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ –±—É–ª–æ —Å—Ö–≤–∞–ª–µ–Ω–æ!")
        except:
            pass
        
        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∑–∞–ø–∏—Ç–æ–º
        try:
            await interaction.message.delete()
        except:
            pass
    
    @ui.button(label="‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏", style=discord.ButtonStyle.red, custom_id="reject_member")
    async def reject_button(self, interaction: discord.Interaction, button: ui.Button):
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚ùå –¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å –≤—ñ–¥—Ö–∏–ª—è—Ç–∏ –∑–∞–ø–∏—Ç–∏.", ephemeral=True)
            return
        
        guild = interaction.guild
        
        # –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–ª—å–Ω–∏—Ö
        if str(guild.id) in pending_approvals and self.member.id in pending_approvals[str(guild.id)]:
            pending_approvals[str(guild.id)].remove(self.member.id)
        
        # –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
        try:
            await self.member.kick(reason="–ó–∞–ø–∏—Ç –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except:
            pass
        
        await interaction.response.send_message(f"‚ùå –ó–∞–ø–∏—Ç {self.member.mention} –±—É–ª–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ.", ephemeral=False)
        
        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∑–∞–ø–∏—Ç–æ–º
        try:
            await interaction.message.delete()
        except:
            pass

def load_data():
    global invite_roles, welcome_messages, request_channels, pending_approvals
    try:
        with open('data.json', 'r') as f:
            data = json.load(f)
            invite_roles = data.get('invite_roles', {})
            welcome_messages = data.get('welcome_messages', {})
            request_channels = data.get('request_channels', {})
            pending_approvals = data.get('pending_approvals', {})
    except (FileNotFoundError, json.JSONDecodeError):
        invite_roles = {}
        welcome_messages = {}
        request_channels = {}
        pending_approvals = {}

def save_data():
    data = {
        'invite_roles': invite_roles,
        'welcome_messages': welcome_messages,
        'request_channels': request_channels,
        'pending_approvals': pending_approvals
    }
    with open('data.json', 'w') as f:
        json.dump(data, f)

async def update_invite_cache(guild):
    try:
        invites = await guild.invites()
        invite_cache[guild.id] = {invite.code: invite.uses for invite in invites}
    except discord.Forbidden:
        print(f"–ù–µ–º–∞—î –¥–æ–∑–≤–æ–ª—É –Ω–∞ –ø–µ—Ä–µ–≥–ª—è–¥ –∑–∞–ø—Ä–æ—à–µ–Ω—å –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild.name}")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É –∑–∞–ø—Ä–æ—à–µ–Ω—å: {e}")

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –æ–Ω–ª–∞–π–Ω!')
    load_data()
    
    for guild in bot.guilds:
        await update_invite_cache(guild)
    
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó: {e}")
    
    check_voice_activity.start()
    update_voice_activity.start()

@bot.event
async def on_member_join(member):
    if member.bot:
        return
    
    guild = member.guild
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è —Ü—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    if str(guild.id) not in request_channels:
        return
    
    # –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–ª—å–Ω–∏—Ö
    if str(guild.id) not in pending_approvals:
        pending_approvals[str(guild.id)] = []
    
    pending_approvals[str(guild.id)].append(member.id)
    save_data()
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤
    channel_id = request_channels[str(guild.id)]["channel_id"]
    channel = guild.get_channel(channel_id)
    
    if not channel:
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ embed –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    kyiv_time = datetime.now(pytz.timezone('Europe/Kiev'))
    embed = discord.Embed(
        title="üîî –ù–æ–≤–∏–π –∑–∞–ø–∏—Ç –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è",
        description=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} —Ö–æ—á–µ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
        color=discord.Color.orange(),
        timestamp=kyiv_time
    )
    
    embed.set_author(name=f"{member.display_name} ({member.id})", icon_url=member.display_avatar.url)
    
    embed.add_field(
        name="üìù –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
        value=f"‚Ä¢ –°—Ç–≤–æ—Ä–µ–Ω–æ: {member.created_at.strftime('%d.%m.%Y')}\n"
              f"‚Ä¢ –ü—Ä–∏—î–¥–Ω–∞–≤—Å—è: {kyiv_time.strftime('%d.%m.%Y –æ %H:%M')}",
        inline=False
    )
    
    embed.set_footer(text=f"ID: {member.id}")
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
    view = ApprovalView(member, request_channels[str(guild.id)])
    await channel.send(embed=embed, view=view)

@bot.tree.command(name="setup_approval_channel", description="–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è")
@app_commands.describe(
    channel="–ö–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è",
    default_role="–†–æ–ª—å –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è —Å—Ö–≤–∞–ª–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)"
)
async def setup_approval_channel(interaction: discord.Interaction, 
                               channel: discord.TextChannel,
                               default_role: Optional[discord.Role] = None):
    if not interaction.user.guild_permissions.administrator:
        return await interaction.response.send_message("‚ùå –ü–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞", ephemeral=True)
    
    request_channels[str(interaction.guild.id)] = {
        "channel_id": channel.id,
        "default_role_id": default_role.id if default_role else None
    }
    save_data()
    
    await interaction.response.send_message(
        f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} —Ç–µ–ø–µ—Ä –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è.\n"
        f"–ö–æ–ª–∏ –Ω–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏—î–¥–Ω–∞—î—Ç—å—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞, —É —Ü–µ–π –∫–∞–Ω–∞–ª –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å—Ö–≤–∞–ª–µ–Ω–Ω—è.\n"
        f"{f'–°—Ö–≤–∞–ª–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º—É—Ç—å —Ä–æ–ª—å {default_role.mention}' if default_role else ''}",
        ephemeral=True
    )

@bot.tree.command(name="disable_approval_system", description="–í–∏–º–∫–Ω—É—Ç–∏ —Å–∏—Å—Ç–µ–º—É —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤")
async def disable_approval_system(interaction: discord.Interaction):
    if not interaction.user.guild_permissions.administrator:
        return await interaction.response.send_message("‚ùå –ü–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞", ephemeral=True)
    
    if str(interaction.guild.id) in request_channels:
        request_channels.pop(str(interaction.guild.id))
        save_data()
    
    await interaction.response.send_message(
        "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤ –≤–∏–º–∫–Ω–µ–Ω–∞. –ù–æ–≤—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑–º–æ–∂—É—Ç—å –ø—Ä–∏—î–¥–Ω—É–≤–∞—Ç–∏—Å—è –±–µ–∑ —Å—Ö–≤–∞–ª–µ–Ω–Ω—è.",
        ephemeral=True
    )

# ... (—ñ–Ω—à—ñ –∫–æ–º–∞–Ω–¥–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –Ω–µ–∑–º—ñ–Ω–Ω–∏–º–∏) ...

TOKEN = os.getenv('DISCORD_TOKEN')
if not TOKEN:
    raise ValueError("–í—ñ–¥—Å—É—Ç–Ω—ñ–π —Ç–æ–∫–µ–Ω Discord")

if __name__ == '__main__':
    print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    bot.run(TOKEN)