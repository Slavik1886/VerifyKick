import discord
from discord import app_commands, ui
from discord.ext import commands, tasks
import os
from datetime import datetime, timedelta
import asyncio
from collections import defaultdict
import json
import random
import aiohttp
from typing import Optional, Literal
import pytz

intents = discord.Intents.default()
intents.members = True
intents.guilds = True
intents.message_content = True
intents.voice_states = True
intents.invites = True
intents.messages = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
application_settings = {}  # –ó–±–µ—Ä—ñ–≥–∞—î –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫
pending_applications = {}  # –¢–∏–º—á–∞—Å–æ–≤–∏–π –∫–µ—à –∑–∞—è–≤–æ–∫ (user_id: guild_id)

def load_application_settings():
    try:
        with open('application_settings.json', 'r') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

def save_application_settings():
    with open('application_settings.json', 'w') as f:
        json.dump(application_settings, f)

application_settings = load_application_settings()

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü—ñ—ó –∑–∞—è–≤–æ–∫
class ApplicationReviewView(ui.View):
    def __init__(self, user_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id

    @ui.button(label="‚úÖ –ü—Ä–∏–π–Ω—è—Ç–∏", style=discord.ButtonStyle.green, custom_id="accept_application")
    async def accept(self, interaction: discord.Interaction, button: ui.Button):
        guild = interaction.guild
        try:
            # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–∏–π –ø–æ–¥–∞–≤ –∑–∞—è–≤–∫—É
            member = await guild.fetch_member(self.user_id)
            
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
            await interaction.message.delete()
            
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
            await interaction.response.send_message(
                f"‚úÖ –ó–∞—è–≤–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention} –ø—Ä–∏–π–Ω—è—Ç–æ!",
                ephemeral=True
            )
            
            # –õ–æ–≥—É—î–º–æ –¥—ñ—é
            log_channel_id = application_settings.get(str(guild.id), {}).get("log_channel")
            if log_channel_id:
                log_channel = guild.get_channel(log_channel_id)
                if log_channel:
                    embed = discord.Embed(
                        title="‚úÖ –ó–∞—è–≤–∫—É –ø—Ä–∏–π–Ω—è—Ç–æ",
                        description=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} –±—É–≤ –ø—Ä–∏–π–Ω—è—Ç–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä",
                        color=discord.Color.green()
                    )
                    embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention)
                    await log_channel.send(embed=embed)
            
        except discord.NotFound:
            await interaction.response.send_message(
                "‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π. –ú–æ–∂–ª–∏–≤–æ, –≤—ñ–Ω –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä.",
                ephemeral=True
            )

    @ui.button(label="‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏", style=discord.ButtonStyle.red, custom_id="reject_application")
    async def reject(self, interaction: discord.Interaction, button: ui.Button):
        guild = interaction.guild
        try:
            # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            member = await guild.fetch_member(self.user_id)
            
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
            await interaction.message.delete()
            
            # –í–∏–≥–∞–Ω—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            await member.kick(reason=f"–ó–∞—è–≤–∫—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user}")
            
            # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
            await interaction.response.send_message(
                f"‚ùå –ó–∞—è–≤–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention} –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ —Ç–∞ –π–æ–≥–æ –≤–∏–≥–Ω–∞–Ω–æ.",
                ephemeral=True
            )
            
            # –õ–æ–≥—É–≤–∞–Ω–Ω—è
            log_channel_id = application_settings.get(str(guild.id), {}).get("log_channel")
            if log_channel_id:
                log_channel = guild.get_channel(log_channel_id)
                if log_channel:
                    embed = discord.Embed(
                        title="‚ùå –ó–∞—è–≤–∫—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ",
                        description=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} –±—É–≤ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∏–π",
                        color=discord.Color.red()
                    )
                    embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention)
                    await log_channel.send(embed=embed)
                    
        except discord.NotFound:
            await interaction.response.send_message(
                "‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π. –ú–æ–∂–ª–∏–≤–æ, –≤—ñ–Ω –≤–∂–µ –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä.",
                ephemeral=True
            )
        except discord.Forbidden:
            await interaction.response.send_message(
                "‚ùå –£ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è –≤–∏–≥–Ω–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.",
                ephemeral=True
            )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞–Ω–∞–ª—É –∑–∞—è–≤–æ–∫
@bot.tree.command(name="setup_application_channel", description="–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫–∞–Ω–∞–ª –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü—ñ—ó –∑–∞—è–≤–æ–∫")
@app_commands.describe(
    channel="–ö–∞–Ω–∞–ª, –∫—É–¥–∏ –±—É–¥—É—Ç—å –Ω–∞–¥—Ö–æ–¥–∏—Ç–∏ –∑–∞—è–≤–∫–∏",
    log_channel="–ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)"
)
async def setup_application_channel(
    interaction: discord.Interaction,
    channel: discord.TextChannel,
    log_channel: Optional[discord.TextChannel] = None
):
    if not interaction.user.guild_permissions.administrator:
        return await interaction.response.send_message(
            "‚ùå –ü–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞!",
            ephemeral=True
        )
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    application_settings[str(interaction.guild.id)] = {
        "channel_id": channel.id,
        "log_channel": log_channel.id if log_channel else None
    }
    save_application_settings()
    
    await interaction.response.send_message(
        f"‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ: {channel.mention}\n"
        f"üìù –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è: {log_channel.mention if log_channel else '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ'}",
        ephemeral=True
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó "–æ—á—ñ–∫—É—î –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó"
@bot.event
async def on_member_join(member: discord.Member):
    if member.bot:
        return
    
    guild_id = str(member.guild.id)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —Å–∏—Å—Ç–µ–º—É –∑–∞—è–≤–æ–∫ –¥–ª—è —Ü—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    if guild_id not in application_settings:
        return  # –Ø–∫—â–æ –Ω—ñ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫
    channel_id = application_settings[guild_id]["channel_id"]
    channel = member.guild.get_channel(channel_id)
    if not channel:
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ embed –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    embed = discord.Embed(
        title="üìù –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø",
        description=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} —Ö–æ—á–µ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
        color=discord.Color.orange()
    )
    embed.add_field(name="–Ü–º'—è", value=member.display_name, inline=True)
    embed.add_field(name="ID", value=member.id, inline=True)
    embed.add_field(name="–î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó", value=member.created_at.strftime("%d.%m.%Y"), inline=False)
    embed.set_thumbnail(url=member.display_avatar.url)
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
    view = ApplicationReviewView(user_id=member.id)
    await channel.send(embed=embed, view=view)
    
    # –î–æ–¥–∞—î–º–æ –¥–æ —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –∫–µ—à—É
    pending_applications[member.id] = guild_id

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó "–ø—Ä–∏–π–Ω—è—Ç–æ/–≤—ñ–¥—Ö–∏–ª–µ–Ω–æ"
@bot.event
async def on_member_update(before: discord.Member, after: discord.Member):
    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ–π—à–æ–≤ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é (–æ—Ç—Ä–∏–º–∞–≤ —Ä–æ–ª—å)
    if len(before.roles) < len(after.roles):
        guild_id = str(after.guild.id)
        if after.id in pending_applications and pending_applications[after.id] == guild_id:
            pending_applications.pop(after.id)  # –í–∏–¥–∞–ª—è—î–º–æ –∑ –∫–µ—à—É

@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!")
    await bot.tree.sync()
    bot.add_view(ApplicationReviewView(user_id=0))  # –î–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫

TOKEN = os.getenv('DISCORD_TOKEN')
bot.run(TOKEN)