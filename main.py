import discord
from discord import app_commands
from discord.ext import commands, tasks
import os
from datetime import datetime, timedelta, time
import asyncio
import aiohttp
import pytz

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
intents = discord.Intents.default()
intents.members = True
intents.guilds = True
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Wargaming API
WG_API_KEY = "180fc971b4111ed71923f2135aa73b74"  # –û—Ç—Ä–∏–º–∞–π—Ç–µ –Ω–∞ https://developers.wargaming.net/
REGION = "eu"  # –ó–º—ñ–Ω—é–π—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–≥—ñ–æ–Ω: "eu", "na", "asia" —Ç–æ—â–æ

# ================= –ù–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ API ====================

async def get_player_info(session, player_name):
    """–û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥—Ä–∞–≤—Ü—è."""
    url = f"https://api.worldoftanks.{REGION}/wot/account/list/"
    params = {
        "application_id": WG_API_KEY,
        "search": player_name,
        "fields": "account_id,nickname",
        "type": "exact"
    }
    async with session.get(url, params=params) as response:
        data = await response.json()
        if data['status'] == 'ok' and data['data']:
            return data['data'][0]  # account_id —ñ nickname
    return None

async def get_tank_stats(session, account_id):
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞–Ω–∫—ñ–≤ –¥–ª—è –≥—Ä–∞–≤—Ü—è."""
    url = f"https://api.worldoftanks.{REGION}/wot/tanks/stats/"
    params = {
        "application_id": WG_API_KEY,
        "account_id": account_id,
        "fields": "tank_id,statistics.battles,statistics.wins"
    }
    async with session.get(url, params=params) as response:
        data = await response.json()
        if data['status'] == 'ok':
            return data['data'].get(str(account_id), [])
    return []

async def get_clan_global_map_stats(session, clan_id):
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω—É –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ñ–π –º–∞–ø—ñ."""
    url = f"https://api.worldoftanks.{REGION}/wot/globalmap/claninfo/"
    params = {
        "application_id": WG_API_KEY,
        "clan_id": clan_id,
        "fields": "provinces,ratings"
    }
    async with session.get(url, params=params) as response:
        data = await response.json()
        if data['status'] == 'ok':
            return data['data'].get(str(clan_id), {})
    return {}

# ================= –ù–æ–≤—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è Discord-–±–æ—Ç–∞ ====================

@bot.tree.command(name="player_stats", description="–û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥—Ä–∞–≤—Ü—è WoT")
@app_commands.describe(player_name="–Ü–º'—è –≥—Ä–∞–≤—Ü—è")
async def player_stats(interaction: discord.Interaction, player_name: str):
    async with aiohttp.ClientSession() as session:
        player_info = await get_player_info(session, player_name)
        if not player_info:
            await interaction.response.send_message(f"‚ùå –ì—Ä–∞–≤—Ü—è –∑ —ñ–º–µ–Ω–µ–º `{player_name}` –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!", ephemeral=True)
            return

        account_id = player_info['account_id']
        nickname = player_info['nickname']

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        url = f"https://api.worldoftanks.{REGION}/wot/account/info/"
        params = {
            "application_id": WG_API_KEY,
            "account_id": account_id,
            "fields": "statistics.all.battles,statistics.all.wins,global_rating"
        }
        async with session.get(url, params=params) as response:
            data = await response.json()
            if data['status'] != 'ok' or not data['data']:
                await interaction.response.send_message(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è `{nickname}`", ephemeral=True)
                return

            stats = data['data'][str(account_id)]['statistics']['all']
            battles = stats['battles']
            wins = stats['wins']
            global_rating = data['data'][str(account_id)].get('global_rating', '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö')

            win_rate = (wins / battles) * 100 if battles else 0

            embed = discord.Embed(
                title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥—Ä–∞–≤—Ü—è: {nickname}",
                color=discord.Color.blue()
            )
            embed.add_field(name="‚öîÔ∏è –ë–æ—ó", value=battles, inline=True)
            embed.add_field(name="üèÜ –í—ñ–¥—Å–æ—Ç–æ–∫ –ø–µ—Ä–µ–º–æ–≥", value=f"{win_rate:.2f}%", inline=True)
            embed.add_field(name="üåê –ì–ª–æ–±–∞–ª—å–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥", value=global_rating, inline=True)

            await interaction.response.send_message(embed=embed)

@bot.tree.command(name="tank_stats", description="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞–Ω–∫—ñ–≤ –¥–ª—è –≥—Ä–∞–≤—Ü—è")
@app_commands.describe(player_name="–Ü–º'—è –≥—Ä–∞–≤—Ü—è")
async def tank_stats(interaction: discord.Interaction, player_name: str):
    async with aiohttp.ClientSession() as session:
        player_info = await get_player_info(session, player_name)
        if not player_info:
            await interaction.response.send_message(f"‚ùå –ì—Ä–∞–≤—Ü—è –∑ —ñ–º–µ–Ω–µ–º `{player_name}` –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!", ephemeral=True)
            return

        account_id = player_info['account_id']
        tanks = await get_tank_stats(session, account_id)

        if not tanks:
            await interaction.response.send_message(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞–Ω–∫—ñ–≤ –¥–ª—è `{player_name}`", ephemeral=True)
            return

        embed = discord.Embed(
            title=f"üöó –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–Ω–∫—ñ–≤ –≥—Ä–∞–≤—Ü—è: {player_name}",
            color=discord.Color.green()
        )
        for tank in tanks[:5]:  # –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–∏—à–µ —Ç–æ–ø-5 —Ç–∞–Ω–∫—ñ–≤
            battles = tank['statistics']['battles']
            wins = tank['statistics']['wins']
            win_rate = (wins / battles) * 100 if battles else 0
            embed.add_field(name=f"–¢–∞–Ω–∫ ID: {tank['tank_id']}",
                            value=f"‚öîÔ∏è –ë–æ—ó: {battles}, üèÜ –í—ñ–¥—Å–æ—Ç–æ–∫ –ø–µ—Ä–µ–º–æ–≥: {win_rate:.2f}%",
                            inline=False)

        await interaction.response.send_message(embed=embed)

@bot.tree.command(name="clan_global_map", description="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω—É –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ñ–π –º–∞–ø—ñ")
@app_commands.describe(clan_id="ID –∫–ª–∞–Ω—É WoT")
async def clan_global_map(interaction: discord.Interaction, clan_id: int):
    async with aiohttp.ClientSession() as session:
        stats = await get_clan_global_map_stats(session, clan_id)
        if not stats:
            await interaction.response.send_message(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –∫–ª–∞–Ω—É –∑ ID `{clan_id}`", ephemeral=True)
            return

        provinces = stats.get('provinces', [])
        ratings = stats.get('ratings', {})

        embed = discord.Embed(
            title=f"üåç –ì–ª–æ–±–∞–ª—å–Ω–∞ –º–∞–ø–∞: –ö–ª–∞–Ω ID {clan_id}",
            color=discord.Color.orange()
        )
        embed.add_field(name="üèòÔ∏è –ü—Ä–æ–≤—ñ–Ω—Ü—ñ—ó", value=len(provinces), inline=True)
        embed.add_field(name="üìä –†–µ–π—Ç–∏–Ω–≥", value=ratings.get('efficiency', '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö'), inline=True)

        await interaction.response.send_message(embed=embed)

# ==================== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ====================
TOKEN = os.getenv('DISCORD_TOKEN')
if not TOKEN:
    raise ValueError("–í—ñ–¥—Å—É—Ç–Ω—ñ–π —Ç–æ–∫–µ–Ω Discord")
bot.run(TOKEN)